{"py/object": "NNclasses.EmbeddingMLP", "verbose": false, "layers_list": [{"py/object": "NNclasses.Layer", "layer_size": 2, "neuron_values": {"py/reduce": [{"py/function": "numpy.core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [4, 2]}, {"py/reduce": [{"py/type": "numpy.dtype"}, {"py/tuple": ["i8", false, true]}, {"py/tuple": [3, "<", null, null, null, -1, -1, 0]}]}, false, {"py/b64": "AQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=="}]}]}}, {"py/object": "NNclasses.EmbeddingLayer", "vocab_size": 2, "embed_size": 6, "layer_size": 6, "embedding_matrix": {"py/reduce": [{"py/function": "numpy.core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [2, 6]}, {"py/reduce": [{"py/type": "numpy.dtype"}, {"py/tuple": ["f8", false, true]}, {"py/tuple": [3, "<", null, null, null, -1, -1, 0]}]}, false, {"py/b64": "YHWSySVQwD/L74pNJBLiP/HqUIkyzPM/uAKMmx529z9vmvqdF6flP7y0jXJKzvY/EB2/lPqKwT9m/LpX59ztP88TUXOQ2fO/mTxGcO3q6b/w/ZEJID/xP3eO0Alod/O/"}]}]}, "input_ids": {"py/id": 3}, "neuron_values": {"py/reduce": [{"py/function": "numpy.core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [4, 12]}, {"py/id": 7}, false, {"py/b64": "EB2/lPqKwT9m/LpX59ztP88TUXOQ2fO/mTxGcO3q6b/w/ZEJID/xP3eO0Alod/O/EB2/lPqKwT9m/LpX59ztP88TUXOQ2fO/mTxGcO3q6b/w/ZEJID/xP3eO0Alod/O/EB2/lPqKwT9m/LpX59ztP88TUXOQ2fO/mTxGcO3q6b/w/ZEJID/xP3eO0Alod/O/YHWSySVQwD/L74pNJBLiP/HqUIkyzPM/uAKMmx529z9vmvqdF6flP7y0jXJKzvY/YHWSySVQwD/L74pNJBLiP/HqUIkyzPM/uAKMmx529z9vmvqdF6flP7y0jXJKzvY/EB2/lPqKwT9m/LpX59ztP88TUXOQ2fO/mTxGcO3q6b/w/ZEJID/xP3eO0Alod/O/YHWSySVQwD/L74pNJBLiP/HqUIkyzPM/uAKMmx529z9vmvqdF6flP7y0jXJKzvY/YHWSySVQwD/L74pNJBLiP/HqUIkyzPM/uAKMmx529z9vmvqdF6flP7y0jXJKzvY/"}]}]}, "embeds_gradient": {"py/reduce": [{"py/function": "numpy.core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [2, 6]}, {"py/id": 7}, false, {"py/b64": "kySDIVC6Gr8rSeWZ1MQWPyuOUcH8r0C/Ybzq8OhTQL8AeRg8Edf+Pl/WlbG7yUK/IzoDCGApE799Jg7RmNQwv2WPZNxwokA/qM1neHyKPj9oNQmMcQQ3v2hJ7GxI0EE/"}]}]}}, {"py/object": "NNclasses.AffineLayer", "layer_size": 36, "neuron_values": {"py/reduce": [{"py/function": "numpy.core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [4, 36]}, {"py/id": 7}, false, {"py/b64": "B8kggaokvD9Il811qx/SPwDA+m68Gcw+BtEMJK2k9L/LUyEM1NoDwAAAInPV17g+dMVbWxgRqj/310y7n58LwHGPsRi5mgBAx3Hhgq8r7b8Y3wmugWbNv5Swg5PcCANA+q9Db3Va5L+OpqaIL6+6P1gboo90VApAx7WId77N5D92eKH/xuXwvwCAU6tzncw+QwrCfT228b83wZNJeYPjv/TNbvBGXsi/AMyIU7B64T4QsIFy0nHTv1RS+Db4Kuk/Fn9nRn+m9L/ySb2ObjUCQPJyVq+0gATAWLTWLDXh1T/0El9jMBv1P8R1DIWDGfk/tOaQvdII4b9x5HSvpfrxP3oST1HGewLA52vWsegG/T83tqbYLNjmPxyuSUNm8P0/1DMyRSy0478oP0mzTzLZP3zH01tNsv8/AIB85bXu2b4AAIxtp9yhPklUhKKF1/e/5+jVrMni2z8AcE1e7mbxvgDA7rAVBL++yeE1A53Q5D8QRdbHQ7jYvwCgVe6B2t2+AADTTojAc77ma4oLx/wCQAAoS66iZ/G+k+Kwe2Kuob8AAEKCxWTLvulue+fLw/I/jH+0GjpN47/gpc7i7RH1vw3wH8Ayhva/94ItOu6zAUAsQwQETmv1PwAALfUVYq4+qpVaZvkT5r8AkOBxpSLhvgBydIkICem+8eEYQraL6T/SYromFfPIP6AHkFMQZ76/hC6lYU9dxr/mC3KD6LXiPwAAXDtIR+O+N4+hWEeW0z9049+EEB3vPwDAop/xstW+Igfgv5rdy78AgAQpyW3IvjTyzdpKsv+/AIBuMqxCzz6mFJtLpXe4v/vYNblCd8q/vPz+F94c0D8AAEjJUHy8vgCgh/EuocK+2k40d+dh778AYEA9nIfRvgAQ6Q1E0eu+Lz3V+MZHxL9oav3LTCcCwADALwlcStA+CEFbT7yT4j9cPRe4fmvVvxxjLbDHw/K/AODKBdnEyr4Q7ESGjAHyP+1AqtA2Kv4/Wx+M2OezAcB6CtHwvkf6v6Qd+iGGy9+/AKAeaCo/tr4AAI5BfqGXPgD7zIwdjOO+xEiwJZ20Xz9t/HVdyn0JQABwM4gt7+m+1+wqsreO9L8ZxDfWZj/hPwAAZiHpK8a+CPCzVcEOAUD63kyBjWvxv4qo8Fr+CNu/v05ORSgw7r9wTVwaYEq8PwCAfIkbI7C+9t20kKqk9D/cGDcpFxcDQJtmKIdvJvu/e7a0XMJe5D+FIvMjlp8LQBEs5Tq7mgDAtgTjDmWa4j+GJdvwKArEv9rxJEPnCAPAIaAaEweR3j8A4PmI+Wi4PljxJzp7VArAQhdEf0Knur+w8QXKxxXnPwAAI8zyc6Q+iFOZLzof4D80mwAhbcXaPzxVMN2ZX+U/AADbdaoX0D4AgLElnX7NPukA6rBciPS/ehuPXgI54z/mqSOocjUCwGHtDIqpgARA0r+A9OtV3T8fGTJ+Y38AQFc63IEBAPu/mz4uf/Cr7b8AAPU4ANa/PoxxvhzAewJA8a9zn1f44z+1kGBWN5LqvxQgYaNVWQLA"}]}]}, "weights": {"py/reduce": [{"py/function": "numpy.core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [12, 36]}, {"py/id": 7}, false, {"py/b64": "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"}]}]}, "bias": {"py/reduce": [{"py/function": "numpy.core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [36]}, {"py/id": 7}, false, {"py/b64": "iz2oYhs8tb/HSiXNod+TP7KLVdGGPKA/uP/YaaLLur8rs2/GIfXAPx2g1Lf+wMC/AAXK9Y9slz9XFzx5SB2oP0IhF/15EZe/Okv2AaXujL8V42zJjUaUv0NCvHUEj68/rbKIBOhQaz+Va3JEOSWBPwGgD7cB6aC/rqtFS1UMeL8JR4pTI1eRv3sq9smtgqg/JLXK4PLYmj8LsDDQNWukPzMWFo3e/LE/4+CHStsIjr8v4g9Uurq2P5pjGzxs45E/vsI2LC17jD/DHSHasKWsv1eIRzqv5FS/daSwIVKJdT/D7z7crYPNPwyl2WF0Ha8/AAAAAAAAAAAqWKViZWOwPwdCKbxZBdC/hY7+sQVPxz9EJspCaCGLv4HEDRh09K0/"}]}]}, "weights_gradient": {"py/reduce": [{"py/function": "numpy.core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [12, 36]}, {"py/id": 7}, false, {"py/b64": "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"}]}]}, "bias_gradient": {"py/reduce": [{"py/function": "numpy.core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [36]}, {"py/id": 7}, false, {"py/b64": "KFLvPTa76j7D/tLykVz6PoRAQNN8rQQ/+nnnjaQf/D7NKlCen0AVvwAAAAAAAAAAIRWTjno59b4uEd694psRP+FvxTgOMRW/YLi6Nttltz4AAAAAAAAAAG6UcjDp8gk/zp0HlZBS8L5YAyvJ+3gFP6ookNI8aA4/ZTZi9SVDvr7QGRmGB87pPpTkeBSv8PY+f2yxTsyp+L5pLL0vYhcFv1xiT1o0fRK/pgB33tEcCb/UGBjbJm8Vv4SMrPnCIvu+u+tT3plQ975rHjGIAgQXvyqs1Tpc3Ac/Ko/i2S9S5b4gb90VKvspv2T9rfZORxE/AAAAAAAAAAA8DM+xFCMIv6menhAzche/E0wRFEseI7+cXOYIT/iPvrarhhladxG/"}]}]}}, {"py/object": "NNclasses.ActivationLayer", "layer_size": 36, "neuron_values": {"py/reduce": [{"py/function": "numpy.core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [4, 36]}, {"py/id": 7}, false, {"py/b64": "B8kggaokvD9Il811qx/SPwDA+m68Gcw+AAAAAAAAAAAAAAAAAAAAAAAAInPV17g+dMVbWxgRqj8AAAAAAAAAAHGPsRi5mgBAAAAAAAAAAAAAAAAAAAAAAJSwg5PcCANAAAAAAAAAAACOpqaIL6+6P1gboo90VApAx7WId77N5D8AAAAAAAAAAACAU6tzncw+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMyIU7B64T4AAAAAAAAAAFRS+Db4Kuk/AAAAAAAAAADySb2ObjUCQAAAAAAAAAAAWLTWLDXh1T/0El9jMBv1P8R1DIWDGfk/AAAAAAAAAABx5HSvpfrxPwAAAAAAAAAA52vWsegG/T83tqbYLNjmPxyuSUNm8P0/AAAAAAAAAAAoP0mzTzLZP3zH01tNsv8/AAAAAAAAAAAAAIxtp9yhPgAAAAAAAAAA5+jVrMni2z8AAAAAAAAAAAAAAAAAAAAAyeE1A53Q5D8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADma4oLx/wCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOlue+fLw/I/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA94ItOu6zAUAsQwQETmv1PwAALfUVYq4+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8eEYQraL6T/SYromFfPIPwAAAAAAAAAAAAAAAAAAAADmC3KD6LXiPwAAAAAAAAAAN4+hWEeW0z9049+EEB3vPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBuMqxCzz4AAAAAAAAAAAAAAAAAAAAAvPz+F94c0D8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADALwlcStA+CEFbT7yT4j8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ7ESGjAHyP+1AqtA2Kv4/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI5BfqGXPgAAAAAAAAAAxEiwJZ20Xz9t/HVdyn0JQAAAAAAAAAAAAAAAAAAAAAAZxDfWZj/hPwAAAAAAAAAACPCzVcEOAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwTVwaYEq8PwAAAAAAAAAA9t20kKqk9D/cGDcpFxcDQAAAAAAAAAAAe7a0XMJe5D+FIvMjlp8LQAAAAAAAAAAAtgTjDmWa4j8AAAAAAAAAAAAAAAAAAAAAIaAaEweR3j8A4PmI+Wi4PgAAAAAAAAAAAAAAAAAAAACw8QXKxxXnPwAAI8zyc6Q+iFOZLzof4D80mwAhbcXaPzxVMN2ZX+U/AADbdaoX0D4AgLElnX7NPgAAAAAAAAAAehuPXgI54z8AAAAAAAAAAGHtDIqpgARA0r+A9OtV3T8fGTJ+Y38AQAAAAAAAAAAAAAAAAAAAAAAAAPU4ANa/PoxxvhzAewJA8a9zn1f44z8AAAAAAAAAAAAAAAAAAAAA"}]}]}, "activation_function": {"py/object": "utils.ReluActivation"}}, {"py/object": "NNclasses.AffineLayer", "layer_size": 2, "neuron_values": {"py/reduce": [{"py/function": "numpy.core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [4, 2]}, {"py/id": 7}, false, {"py/b64": "SWWTNsNyEUCt4p4xbcwTwDCLgfYtYA7A9F/BgXOAFEA8Ib1wFgMLwNx+ESCDhhRAVR8JHf4YFUBL1Ja4NSwQwA=="}]}]}, "weights": {"py/reduce": [{"py/function": "numpy.core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [36, 2]}, {"py/id": 7}, false, {"py/b64": "Mkv7co5px796rWeuNW2lv9gDXU4v37E/amn6WnOkt7+BGNusYb68v7F9GKrWW+c/Gfw4x4O50D8vv1TQVbTWv31S7YHUaOQ/jgwKejHw0L9kQGahSxXBv4t5d3WLJdM/Dl3y4Mdivr94uJeTck+IP0XRG7c6Uuo/JuY95NIN579m0TuO1DPWP8WM4gXYhuG/fY1y1helyr+ft/uiyL7Ovyqokie80Yo/S6amyZ5k178CXkR1qWrmPyDtoYCj0dy///22FTPgp7+juVdSCybMv8DEgSj68uK/geYMYc8T0j9mX+jA3EDePxCg8gLOBuy/ijpWYw1XtD+JfaiIYHu4P3BaeZe9KcI/m06tBOADwr+4eCwJK0eZPz/OHfsFe98/8REkjNHQzj/vd1DPzJSVvwJC/fpLT8K/HLhVZj6oyz8j2urUVNSAv4V6EPmB4uM/uuchqsfq3L/6UkUvyb/kP19BjD6oOMe/QTT4JEig2z+GMQ430J3RPw4DuyE6zYa/bimpjqqvxr8MW49OAy/bvx902PnfI+Q/zn69F2Xn1b8nILDYIwXfP/O7aZhQ8eG/rWfIGyr7ob/ZLNNn+TCfP4xCgDmli96/O9wfBICk6T9Pg95z8YPEP3cUnwXRk9u/W40zgeq7x79Gci3BXqbIv/iGajbUFaK/iOyUPra+0D/aiiL4F7ngP4kadqLWRd6/nw7DBthm5L9GNulzeWnTPz98AqGDrcK/AVB03fz3wb9C0D4GNS3bP4qrjMSUA9S/"}]}]}, "bias": {"py/reduce": [{"py/function": "numpy.core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [2]}, {"py/id": 7}, false, {"py/b64": "eYhXqHpJ1L9xiFeoeknUPw=="}]}]}, "weights_gradient": {"py/reduce": [{"py/function": "numpy.core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [36, 2]}, {"py/id": 7}, false, {"py/b64": "A7Ar/DjV5L6S4Cv8ONXkPmAxXSC/0PE+c2BcIL/Q8b7VsYLEpVAxP1h+gsSlUDG/mGSRASpiHr8FMpEBKmIePxjPi7cCGSy/UqCLtwIZLD8AAAAAAAAAAAAAAAAAAAAAOhNabKG3CD/0uVlsobcIvxRLpOEdVDS/PCmk4R1UND/Mo4leGJUovxndiV4YlSg/avbnfSMaAj/BnOd9IxoCvwAAAAAAAAAAAAAAAAAAAADXHBpQIC4sv4deGlAgLiw/cpjzd5Z+Br8Ac/N3ln4GP760CkihIDQ/n3UKSKEgNL9WGgxBjH0zv8RHDEGMfTM/IahvMIajDj9F/W4whqMOv3KoAUkf/RC/KowBSR/9ED/va7SvY4AkP/kutK9jgCS/2R6mF5i6B79Z96UXmLoHP7ZUp5xm2Sg/5iynnGbZKL+z66iHBAI1PwfKqIcEAjW/doM2X1hXMz/ySTZfWFczv2ft2rnGZic/0qfaucZmJ78W4K7HVaESv4MLr8dVoRI/f3UelulKDL9mRh6W6UoMPzsFG6wj9Sq/EUQbrCP1Kj8EMK4yMS0uv8j9rTIxLS4/sMvt7349Aj+OI+3vfj0Cv7s/F7tE5zc/sPgWu0TnN7/I8DxKa5QivxccPUprlCI/AAAAAAAAAAAAAAAAAAAAAC01zVNoWBY/W4zMU2hYFr9XUYNNXzQrvw0kg01fNCs/j5f2s8F2MD8yT/azwXYwvz8Hbl07FRE/v3ptXTsVEb8of/ArfCkmv9Gy8Ct8KSY/"}]}]}, "bias_gradient": {"py/reduce": [{"py/function": "numpy.core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [2]}, {"py/id": 7}, false, {"py/b64": "pT6t/+xRJD/+16z/7FEkvw=="}]}]}}]}